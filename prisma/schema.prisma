// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  email    String        @unique
  password String
  name     String
  isAdmin  Boolean       @default(false)
  salt     String
  jobs     Job[]         @relation("PostedJobs")
  applied  Application[]
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  description  String        @db.Text
  company      String
  postedBy     User          @relation("PostedJobs", fields: [postedById], references: [id])
  postedById   Int
  createdAt    DateTime      @default(now())
  applications Application[]
}

model Application {
  id        Int      @id @default(autoincrement())
  message   String   @db.Text
  resumeUrl String // Store the file path or URL
  appliedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     Int
  status    String   @default("PENDING") // PENDING, REVIEWED, REJECTED, etc.

  @@unique([userId, jobId]) // A user can only apply once per job
}
